// <auto-generated />
using System;
using Infrastructure.RelationalDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230323221348_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-preview.2.23128.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Domain.Entities.RelUserTag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid>("TagId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("TagId");

                    b.HasIndex("UserId");

                    b.ToTable("RelUserTags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6271588b-3f29-4cfc-8c03-0a914c76384b"),
                            TagId = new Guid("7ecbd3c6-ae49-4d9f-a5a9-198b49f8fb30"),
                            UserId = new Guid("f973d74b-b7df-40a6-a530-017dcdd870e7")
                        },
                        new
                        {
                            Id = new Guid("21893aeb-056e-4e4a-a758-fed2e03cb3e8"),
                            TagId = new Guid("4502a8b0-7d98-4516-87ad-0d45c76febb0"),
                            UserId = new Guid("f973d74b-b7df-40a6-a530-017dcdd870e7")
                        },
                        new
                        {
                            Id = new Guid("24093bd9-6fe5-4c19-b03e-20d8c54acaa3"),
                            TagId = new Guid("41766635-e22f-4b71-a1fc-c974b720475e"),
                            UserId = new Guid("56d1fcf1-1807-4211-9315-43507193444c")
                        },
                        new
                        {
                            Id = new Guid("915c5232-f0dd-4c74-b42e-ab3c7fc28877"),
                            TagId = new Guid("7ecbd3c6-ae49-4d9f-a5a9-198b49f8fb30"),
                            UserId = new Guid("56d1fcf1-1807-4211-9315-43507193444c")
                        });
                });

            modelBuilder.Entity("Domain.Entities.Tag", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7ecbd3c6-ae49-4d9f-a5a9-198b49f8fb30"),
                            Name = "Software Developer"
                        },
                        new
                        {
                            Id = new Guid("4502a8b0-7d98-4516-87ad-0d45c76febb0"),
                            Name = "Backend"
                        },
                        new
                        {
                            Id = new Guid("ce0f63de-b59a-4a09-a5fe-4fa52de402ba"),
                            Name = "Frontend"
                        },
                        new
                        {
                            Id = new Guid("41766635-e22f-4b71-a1fc-c974b720475e"),
                            Name = "Fullstack"
                        },
                        new
                        {
                            Id = new Guid("49c305f9-5927-4df4-9b6d-afa0c34771b5"),
                            Name = "Web Developer"
                        });
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f973d74b-b7df-40a6-a530-017dcdd870e7"),
                            Email = "john@hotmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            Phone = "05451265284"
                        },
                        new
                        {
                            Id = new Guid("56d1fcf1-1807-4211-9315-43507193444c"),
                            Email = "john@hotmail.com",
                            FirstName = "Mary",
                            LastName = "Doe",
                            Phone = "05451265284"
                        });
                });

            modelBuilder.Entity("Domain.Entities.RelUserTag", b =>
                {
                    b.HasOne("Domain.Entities.Tag", "Tag")
                        .WithMany("RelUserTags")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("RelUserTags")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tag");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Tag", b =>
                {
                    b.Navigation("RelUserTags");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("RelUserTags");
                });
#pragma warning restore 612, 618
        }
    }
}
